variables:
- template: /eng/common-variables.yml@self
- template: /eng/common/templates-official/variables/pool-providers.yml@self
- name: Build.Repository.Clean
  value: true
- name: LinuxImage
  value: 1es-ubuntu-2204-pt
- name: WindowsImage
  value: 1es-windows-2022-pt
- name: MacImage
  value: macOS-12
- name: CheckNuGetSizesScript
  value: >-
    $nupkgs_large=(Get-ChildItem artifacts/packages/$(_BuildConfig)/Shipping -recurse -include "*.nupkg" | Select-Object Name,Length | Where-Object { $_.Length -gt 250*1MB });
    if ($nupkgs_large.Length -gt 0) { Write-Error "NuGet size exceeds 250MiB: $($nupkgs_large | Format-Table | Out-String)"; exit 1 }

trigger:
  batch: true
  branches:
    include:
    - main
    - release/*

resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    featureFlags:
      autoBaseline: true
    sdl:
      binskim:
        enabled: true
        scanOutputDirectoryOnly: true
    pool:
      name: $(DncEngInternalBuildPool)
      image: $(WindowsImage)
      os: windows

    stages:
      - stage: build
        displayName: Build
        jobs:
        - template: /eng/common/templates-official/jobs/jobs.yml@self
          parameters:
            enablePublishBuildArtifacts: true
            enablePublishBuildAssets: true
            enablePublishUsingPipelines: true
            enableMicrobuild: true
            enableSourceBuild: true
            variables:
              - _BuildConfig: Release
            jobs:

            ############ macOS BUILD ############
            - job: Build_macOS_x64
              displayName: macOS_x64
              timeoutInMinutes: 120
              pool:
                name: Azure Pipelines
                vmImage: $(MacImage)
                os: macOS
              steps:
              - bash: |
                  ./build.sh --arch x64 --restore --build --pack --ci --configuration $(_BuildConfig) /p:PackageRID=osx-x64 /p:AssetManifestOS=osx /p:PlatformName=x64 $(_InternalBuildArgs) $(_NonWindowsInternalPublishArg)
                  ./eng/common/build.ps1 -ci -configuration $(_BuildConfig) -restore -sign /p:PackageRID=osx-x64 /p:AssetManifestOS=osx /p:PlatformName=x64 $(_InternalBuildArgs)
                displayName: Build
              - task: 1ES.PublishPipelineArtifact@1
                inputs:
                  path: $(System.DefaultWorkingDirectory)/artifacts/packages
                  artifact: Packages_macOS_x64
              - bash: |
                  rm -rf binaryen node python llvm emscripten
                displayName: Remove temporary artifacts
              - powershell: $(CheckNuGetSizesScript)
                displayName: Check NuGet sizes

            - job: Build_macOS_arm64
              displayName: macOS_arm64
              timeoutInMinutes: 120
              pool:
                name: Azure Pipelines
                vmImage: $(MacImage)
                os: macOS
              steps:
              - bash: |
                  ./build.sh --arch arm64 --restore --build --pack --ci --configuration $(_BuildConfig) /p:PackageRID=osx-arm64 /p:AssetManifestOS=osx /p:PlatformName=arm64 $(_InternalBuildArgs) $(_NonWindowsInternalPublishArg)
                  ./eng/common/build.ps1 -ci -configuration $(_BuildConfig) -restore -sign /p:PackageRID=osx-arm64 /p:AssetManifestOS=osx /p:PlatformName=arm64 $(_InternalBuildArgs)
                displayName: Build
              - task: 1ES.PublishPipelineArtifact@1
                inputs:
                  path: $(System.DefaultWorkingDirectory)/artifacts/packages
                  artifact: Packages_macOS_arm64
              - bash: |
                  rm -rf binaryen node python llvm emscripten
                displayName: Remove temporary artifacts
              - powershell: $(CheckNuGetSizesScript)
                displayName: Check NuGet sizes
            
            ############ Linux BUILD ############
            - job: Build_Linux_x64
              displayName: Linux_x64
              timeoutInMinutes: 120
              pool:
                name: Azure Pipelines
                image: $(LinuxImage)
                os: linux
              steps:
              - bash: |
                  ./build.sh --arch x64 --restore --build --pack --ci --configuration $(_BuildConfig) /p:PackageRID=linux-x64 /p:AssetManifestOS=linux /p:PlatformName=x64 $(_InternalBuildArgs) $(_NonWindowsInternalPublishArg)
                  ./eng/common/build.ps1 -ci -configuration $(_BuildConfig) -restore -sign /p:PackageRID=linux-x64 /p:AssetManifestOS=linux /p:PlatformName=x64 $(_InternalBuildArgs)
                displayName: Build
              - task: 1ES.PublishPipelineArtifact@1
                inputs:
                  path: $(System.DefaultWorkingDirectory)/artifacts/packages
                  artifact: Packages_linux_x64
              - bash: |
                  rm -rf binaryen node python llvm emscripten
                displayName: Remove temporary artifacts
              - powershell: $(CheckNuGetSizesScript)
                displayName: Check NuGet sizes
